// Code generated by MockGen. DO NOT EDIT.
// Source: impl.go

// Package application_mock is a generated GoMock package.
package application_mock

import (
	context "context"
	reflect "reflect"

	model "github.com/danClauz/bibit/bmovie/search/model"
	gomock "github.com/golang/mock/gomock"
)

// MockApplication is a mock of Application interface.
type MockApplication struct {
	ctrl     *gomock.Controller
	recorder *MockApplicationMockRecorder
}

// MockApplicationMockRecorder is the mock recorder for MockApplication.
type MockApplicationMockRecorder struct {
	mock *MockApplication
}

// NewMockApplication creates a new mock instance.
func NewMockApplication(ctrl *gomock.Controller) *MockApplication {
	mock := &MockApplication{ctrl: ctrl}
	mock.recorder = &MockApplicationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApplication) EXPECT() *MockApplicationMockRecorder {
	return m.recorder
}

// ListMovieByTitle mocks base method.
func (m *MockApplication) ListMovieByTitle(ctx context.Context, reqId, searchKey string, page int) (*model.SearchHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListMovieByTitle", ctx, reqId, searchKey, page)
	ret0, _ := ret[0].(*model.SearchHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListMovieByTitle indicates an expected call of ListMovieByTitle.
func (mr *MockApplicationMockRecorder) ListMovieByTitle(ctx, reqId, searchKey, page interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListMovieByTitle", reflect.TypeOf((*MockApplication)(nil).ListMovieByTitle), ctx, reqId, searchKey, page)
}

// MovieDetailByImdbId mocks base method.
func (m *MockApplication) MovieDetailByImdbId(ctx context.Context, reqId, searchKey string) (*model.SearchHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MovieDetailByImdbId", ctx, reqId, searchKey)
	ret0, _ := ret[0].(*model.SearchHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MovieDetailByImdbId indicates an expected call of MovieDetailByImdbId.
func (mr *MockApplicationMockRecorder) MovieDetailByImdbId(ctx, reqId, searchKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MovieDetailByImdbId", reflect.TypeOf((*MockApplication)(nil).MovieDetailByImdbId), ctx, reqId, searchKey)
}
