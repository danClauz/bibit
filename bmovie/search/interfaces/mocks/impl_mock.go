// Code generated by MockGen. DO NOT EDIT.
// Source: impl.go

// Package interfaces_mock is a generated GoMock package.
package interfaces_mock

import (
	context "context"
	reflect "reflect"

	model "github.com/danClauz/bibit/bmovie/search/model"
	gomock "github.com/golang/mock/gomock"
)

// MockInterfaces is a mock of Interfaces interface.
type MockInterfaces struct {
	ctrl     *gomock.Controller
	recorder *MockInterfacesMockRecorder
}

// MockInterfacesMockRecorder is the mock recorder for MockInterfaces.
type MockInterfacesMockRecorder struct {
	mock *MockInterfaces
}

// NewMockInterfaces creates a new mock instance.
func NewMockInterfaces(ctrl *gomock.Controller) *MockInterfaces {
	mock := &MockInterfaces{ctrl: ctrl}
	mock.recorder = &MockInterfacesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterfaces) EXPECT() *MockInterfacesMockRecorder {
	return m.recorder
}

// DetailMovie mocks base method.
func (m *MockInterfaces) DetailMovie(ctx context.Context, reqId, searchKey string) (*model.SearchHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DetailMovie", ctx, reqId, searchKey)
	ret0, _ := ret[0].(*model.SearchHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DetailMovie indicates an expected call of DetailMovie.
func (mr *MockInterfacesMockRecorder) DetailMovie(ctx, reqId, searchKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DetailMovie", reflect.TypeOf((*MockInterfaces)(nil).DetailMovie), ctx, reqId, searchKey)
}

// SearchMovie mocks base method.
func (m *MockInterfaces) SearchMovie(ctx context.Context, reqId, searchKey string, page int) (*model.SearchHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchMovie", ctx, reqId, searchKey, page)
	ret0, _ := ret[0].(*model.SearchHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchMovie indicates an expected call of SearchMovie.
func (mr *MockInterfacesMockRecorder) SearchMovie(ctx, reqId, searchKey, page interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchMovie", reflect.TypeOf((*MockInterfaces)(nil).SearchMovie), ctx, reqId, searchKey, page)
}
